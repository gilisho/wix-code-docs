{ "name": "Badges",
  "memberOf": "wix-members-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "badges.js" },
  "docs":
    { "summary": "The Badges API contains functionality for working with [member badges](https://support.wix.com/en/article/about-member-badges) from backend code.",
      "description":
        [ "To use the Badges API, import `{badges}` from the `wix-members-backend` module:",
          "",
          "   ```javascript",
          "   import {badges} from 'wix-members-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "assignMembers",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeId",
              "type": "string",
              "doc": "The ID of the badge to assign members to." },
            { "name": "memberIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The IDs of the members to assign to the badge." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "string" ] } ] },
            "doc": "Fulfilled - The IDs of the members assigned to the badge.\nRejected - Error message." },
        "locations":
          [ { "lineno": 70,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Assigns a badge to site members.",
            "description":
              [ "The `assignMembers()` function returns a Promise that resolves when the",
                " members with the given IDs are assigned as badge holders of the specified badge.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.assignMembers()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.assignMembers()`](wix-users-backend/badges-obj/assignMembers).",
                "",
                "The `badgeId` parameter must be an ID from your site's `Members/Badges` collection.",
                "Typically, you retrieve the ID from from the collection using a query or through a dataset." ],
            "links": [],
            "examples":
              [ { "title": "Assign a badge to members",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function assignMembers() {",
                      "  const badgeId = 'abc07f04-e20a-4167-9070-fb04e1a7bdad';",
                      "  const memberIds = [",
                      "    'efab296e-2687-4751-9956-ee73200dd4bb',",
                      "    '72751428-2743-4bda-acf5-4218a4279cd3'",
                      "  ];",
                      "",
                      "  return badges.assignMembers(badgeId, memberIds)",
                      "    .then((memberIds) => {",
                      "      return memberIds;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Returns a Promise that resolves to an array of member IDs:",
                      " *",
                      " * [",
                      " *   \"efab296e-2687-4751-9956-ee73200dd4bb\",",
                      " *   \"72751428-2743-4bda-acf5-4218a4279cd3\",",
                      " *   \"3c1234ea-f6cc-678b-b0d1-2eb6b8cea912\",",
                      " *   \"e12345e1-f9bd-4eae-6789-864c3602eb7e\"",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createBadge",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeInfo",
              "type": "wix-members-backend.Badges.BadgeInfo",
              "doc": "The information to use when creating the badge." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-members-backend.Badges.Badge" ] },
            "doc": "Fulfilled - The newly created badge.\nRejected - Error message." },
        "locations":
          [ { "lineno": 172,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Creates a badge.",
            "description":
              [ "The `createBadge()` function returns a Promise that resolves to the newly created badge when",
                " the badge is created.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.createBage()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.createBage()`](wix-users-backend/badges-obj/createBage).",
                "",
                " Badges created with the `createBadge()` function will not have any badge permissions. You",
                " can [set badge permissions](https://support.wix.com/en/article/setting-permissions-for-a-member-badge) in the Site Members area of your dashboard.",
                "",
                " If `backgroundColor` and `textColor` are not specified they will default to `#796EFF` (purple) and `#FFFFFF` (white) respectively." ],
            "links": [],
            "examples":
              [ { "title": "Create a badge",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function createBadge() {",
                      "  const badgeInfo = {",
                      "    title: 'Rising Star',",
                      "    description: 'Posted 5 times in their first month',",
                      "    backgroundColor: '#C5A7CB',",
                      "    textColor: '#00374C',",
                      "    icon: 'https://upload.wikimedia.org/wikipedia/commons/7/79/StarIconGold.png'",
                      "  };",
                      "",
                      "  return badges.createBadge(badgeInfo)",
                      "    .then((badge) => {",
                      "      return badge;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Returns a Promise that resolves to a badge object:",
                      " *",
                      " * {",
                      " *   \"id\": \"26e6547a-e73a-42b1-af8a-1b1bf0905db8\",",
                      " *   \"title\": \"Rising Star\",",
                      " *   \"description\": \"Posted 5 times in their first month\",",
                      " *   \"backgroundColor\": \"#C5A7CB\",",
                      " *   \"textColor\": \"#00374C\",",
                      " *   \"icon\": \"https://upload.wikimedia.org/wikipedia/commons/7/79/StarIconGold.png\",",
                      " *   \"roleId\": \"26e6547a-e73a-42b1-af8a-1b1bf0905db8\",",
                      " *   \"slug\": \"rising-star\",",
                      " *   \"createdDate\": \"2021-02-01T06:46:25.226Z\",",
                      " *   \"updatedDate\": \"2021-02-01T06:46:25.226Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteBadge",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeId",
              "type": "string",
              "doc": "ID of the badge to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the badge is deleted.\nRejected - Error message." },
        "locations":
          [ { "lineno": 231,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Deletes a badge.",
            "description":
              [ "The `deleteBadge()` function returns a Promise that resolves when",
                " the badge with the specified ID has been deleted.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.deleteBadge()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.deleteBadge()`](wix-users-backend/badges-obj/deleteBadge).",
                "",
                "The `badgeId` parameter must be an ID from your site's `Members/Badges` collection.",
                "Typically, you retrieve the ID from from the collection using a query or through a dataset." ],
            "links": [],
            "examples":
              [ { "title": "Deletes a badge",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function deleteBadge() {",
                      "  const badgeId = '26e6547a-e73a-42b1-af8a-1b1bf0905db8';",
                      "",
                      "  return badges.deleteBadge(badgeId)",
                      "    .then( () => {",
                      "      console.log(\"Badge deleted\");",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "  });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listMemberBadges",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "memberIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of the members to list badges for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-members-backend.Badges.MemberBadges" ] } ] },
            "doc": "Fulfilled - An array of badge IDs associated with each member.\nRejected - Error message." },
        "locations":
          [ { "lineno": 121,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Lists the badges assigned to each of the specified site members.",
            "description":
              [ "The `listMemberBadges()` function returns a Promise that resolves to a",
                " list of badge IDs associated with each of the specified members.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.listMemberBadges()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.listMemberBadges()`](wix-users-backend/badges-obj/listMemberBadges)." ],
            "links": [],
            "examples":
              [ { "title": "List badges assigned to members",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function listMemberBadges() {",
                      "  const memberIds = [",
                      "    \"32cf071a-cc2f-450f-ad74-5a25db0b1b6a\",",
                      "    \"2cb1846f-0c7a-4c39-8736-349236cfab40\",",
                      "    \"69nh659a-ic2f-950f-ed74-14a25db9b1b6j\"",
                      "  ];",
                      "",
                      "  return badges.listMemberBadges(memberIds)",
                      "    .then((memberBadges) => {",
                      "      return memberBadges;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Returns a promise that resolves to:",
                      " *",
                      " * [",
                      " *   {",
                      " *     \"memberId\": \"32cf071a-cc2f-450f-ad74-5a25db0b1b6a\",",
                      " *     \"badgeIds\": [",
                      " *       \"0d37ea22-44b0-4a62-9818-ff660178c439\",",
                      " *       \"c7d1a81d-485a-4eef-872f-4595ab2a15a2\"",
                      " *     ]",
                      " *   },",
                      " *   {",
                      " *     \"memberId\": \"2cb1846f-0c7a-4c39-8736-349236cfab40\",",
                      " *     \"badgeIds\": [",
                      " *       \"0d37ea22-44b0-4a62-9818-ff660178c439\",",
                      " *       \"41dcda59-8b6d-4deb-bb1f-d283de044b85\",",
                      " *       \"df9fc0e2-c2ba-40ba-a160-200a016c3507\"",
                      " *     ]",
                      " *   },",
                      " *   {",
                      " *     \"memberId\": \"69nh659a-ic2f-950f-ed74-14a25db9b1b6j\",",
                      " *     \"badgeIds\": [",
                      " *       \"df9fc0e2-c2ba-40ba-a160-200a016c3507\"",
                      " *     ]",
                      " *   }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "List badges assigned to a specific member",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function listMemberBadges() {",
                      "  const memberIds = [",
                      "    'efab296e-2687-4751-9956-ee73200dd4bb'",
                      "  ];",
                      "",
                      "  return badges.listMemberBadges(memberIds)",
                      "    .then((memberBadges) => {",
                      "      return memberBadges;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Returns a Promise that resolves to:",
                      " *",
                      " * [",
                      " *   {",
                      " *     \"memberId\": \"efab296e-2687-4751-9956-ee73200dd4bb\",",
                      " *     \"badgeIds\": [",
                      " *       \"0d37ea22-44b0-4a62-9818-ff660178c439\",",
                      " *       \"41dcda59-8b6d-4deb-bb1f-d283de044b85\",",
                      " *       \"df9fc0e2-c2ba-40ba-a160-200a016c3507\"",
                      " *     ]",
                      " *   }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listMembers",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeId",
              "type": "string",
              "doc": "ID of the badge to list members of." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "string" ] } ] },
            "doc": "Fulfilled - IDs of the members assigned to the badge.\nRejected - Error message." },
        "locations":
          [ { "lineno": 97,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Lists the IDs of all members assigned to a badge.",
            "description":
              [ "The `listMembers()` function returns a Promise that resolves to the member IDs",
                " of all members assigned to the specified badge.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.listMembers()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.listMembers()`](wix-users-backend/badges-obj/listMembers)." ],
            "links": [],
            "examples":
              [ { "title": "List members assigned to a badge",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function listMembers() {",
                      "  const badgeId = 'a78942d7-7e71-4b93-b250-8a6dfc371312'",
                      "  return badges.listMembers(badgeId)",
                      "    .then((memberIds) => {",
                      "      return memberIds;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Returns a Promise that resolves to:",
                      " *",
                      " * [",
                      " *   \"2cb1846f-0c7a-4c39-8736-349236cfab40\",",
                      " *   \"32cf071a-cc2f-450f-ad74-5a25db0b1b6a\",",
                      " *   \"e99804e1-f9bd-4eae-8020-864c3602eb7e\"",
                      " * ]",
                      " *",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeMembers",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeId",
              "type": "string",
              "doc": "The ID of the badge to remove members from." },
            { "name": "memberIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of the members to remove from the badge." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the members are removed.\nRejected - Error message." },
        "locations":
          [ { "lineno": 147,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Removes site members from an assigned badge.",
            "description":
              [ "The `removeMembers()` function returns a Promise that resolves when the",
                " members with the given IDs are removed as badge holders of the specified badge.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.listMembers()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.listMembers()`](wix-users-backend/Badges-obj/listMembers)." ],
            "links": [],
            "examples":
              [ { "title": "Remove members from an assigned badge",
                  "body":
                    [ "import {badges} from 'wix-members-backend';",
                      "",
                      "export function removeMembers() {",
                      "  const badgeId = 'a78942d7-7e71-4b93-b250-8a6dfc371312';",
                      "  const memberIds = [",
                      "    '28d35f86-6694-4455-9dff-aff5d450b482',",
                      "    '2dcad15c-c82a-4e5f-99a8-5c0274310db9',",
                      "    '72751428-2743-4bda-acf5-4218a4279cd3',",
                      "    '8831eed6-928e-4f85-b80a-e1e48fb7c4fd'",
                      "  ];",
                      "",
                      "  return badges.removeMembers(badgeId, memberIds)",
                      "    .then( () => {",
                      "      console.log('Members removed from badge');",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "  });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateBadge",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "badgeId",
              "type": "string",
              "doc": "ID of the badge to update." },
            { "name": "badgeInfo",
              "type": "wix-members-backend.Badges.BadgeInfo",
              "doc": "The information to use when updating the badge." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-members-backend.Badges.Badge" ] },
            "doc": "Fulfilled - The updated badge.\nRejected - Error message." },
        "locations":
          [ { "lineno": 200,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Updates a badge.",
            "description":
              [ "The `updateBadge()` function returns a Promise that resolves to the updated badge when",
                " the badge with the specified ID has been updated.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `badges.updateBadge()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.badges.updateBadge()`](wix-users-backend/Badges-obj/updateBadge).",
                "",
                "Only the properties passed in the `BadgeInfo` object will be updated. All other properties will remain the same.",
                "",
                "Since the badge's `slug` is based on the badge's `title`, if you change the badge `title`, the badge `slug` will update accordingly.",
                "",
                "The `badgeId` parameter must be an ID from your site's `Members/Badges` collection.",
                "Typically, you retrieve the ID from from the collection using a query or through a dataset." ],
            "links": [],
            "examples":
              [ { "title": "Update an existing badge",
                  "body":
                    [ "import { badges } from 'wix-members-backend';",
                      "",
                      "export function updateBadge() {",
                      "  const badgeId = 'a78942d7-7e71-4b93-b250-8a6dfc371312';",
                      "  const badgeInfo = {",
                      "    title: 'Rising Star',",
                      "    description: 'Posted 5 times in their first month',",
                      "    backgroundColor: '#C5A7CB',",
                      "    textColor: '#00374C',",
                      "    icon: 'https://upload.wikimedia.org/wikipedia/commons/7/79/StarIconGold.png'",
                      "  };",
                      "",
                      "   return badges.updateBadge(badgeId, badgeInfo)",
                      "   .then((badge) => {",
                      "     return badge;",
                      "   })",
                      "   .catch((error) => {",
                      "     console.error(error);",
                      "  });",
                      "}",
                      "",
                      "/*",
                      " * Returns a Promise that resolves to a badge object:",
                      " *",
                      " * {",
                      " *   \"id\": \"a78942d7-7e71-4b93-b250-8a6dfc371312\",",
                      " *   \"title\": \"Rising Star\",",
                      " *   \"description\": \"Posted 5 times in their first month\",",
                      " *   \"backgroundColor\": \"#C5A7CB\",",
                      " *   \"textColor\": \"#00374C\",",
                      " *   \"icon\": \"https://upload.wikimedia.org/wikipedia/commons/7/79/StarIconGold.png\",",
                      " *   \"roleId\": \"a78942d7-7e71-4b93-b250-8a6dfc371312\",",
                      " *   \"slug\": \"rising-star\",",
                      " *   \"createdDate\": \"2021-02-01T06:57:30.405Z\",",
                      " *   \"updatedDate\": \"2021-02-01T07:03:17.101Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Badge",
        "locations":
          [ { "lineno": 41,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "An object representing a member badge.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Badge ID." },
            { "name": "title",
              "type": "string",
              "doc": "Badge title." },
            { "name": "description",
              "type": "string",
              "doc": "Badge description." },
            { "name": "backgroundColor",
              "type": "string",
              "doc": "Background color of the badge as a hexadecimal rgb color value. The default color is `#796EFF` (purple)." },
            { "name": "textColor",
              "type": "string",
              "doc": "Text color of the badge as a hexadecimal rgb color value. The default color is `#FFFFFF` (white)." },
            { "name": "icon",
              "type": "string",
              "doc": "Badge icon as an SVG image. One of the following:\n\n  + An external web URL in the following format: `http(s)://<image url>`.\n  + The [source URL](wix-media-backend.mediaManager.html#getFileUrl) for a Wix Media Manager file. Wix Media Manager file names in a `wix:image://...` format are not supported." },
            { "name": "roleId",
              "type": "string",
              "doc": "ID of the role that badge members are assigned to." },
            { "name": "slug",
              "type": "string",
              "doc": "Badge's unique URL as used in a dynamic page." },
            { "name": "createdDate",
              "type": "Date",
              "doc": "Date and time the badge was created." },
            { "name": "updatedDate",
              "type": "Date",
              "doc": "Date and time the badge was last updated." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "BadgeInfo",
        "locations":
          [ { "lineno": 25,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "Information to use when creating or updating a badge.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Badge title." },
            { "name": "description",
              "type": "string",
              "doc": "Badge description.",
              "optional": true },
            { "name": "backgroundColor",
              "type": "string",
              "doc": "Background color of the badge as a hexadecimal rgb color value. The default color is `#796EFF` (purple).",
              "optional": true },
            { "name": "textColor",
              "type": "string",
              "doc": "Text color of the badge as a hexadecimal rgb color value. The default color is `#FFFFFF` (white).",
              "optional": true },
            { "name": "icon",
              "type": "string",
              "doc": "Badge icon as an SVG image. One of the following:\n\n  + An external web URL in the following format: `http(s)://<image url>`.\n  + The [source URL](wix-media-backend.mediaManager.html#getFileUrl) for a Wix Media Manager file. Wix Media Manager file names in a `wix:image://...` format are not supported.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MemberBadges",
        "locations":
          [ { "lineno": 62,
              "filename": "badges.js" } ],
        "docs":
          { "summary": "An object representing the badges associated with a member.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "memberId",
              "type": "string",
              "doc": "Member ID." },
            { "name": "badgeIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of all badges assigned to the specified member." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }