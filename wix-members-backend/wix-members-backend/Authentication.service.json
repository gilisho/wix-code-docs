{ "name": "Authentication",
  "memberOf": "wix-members-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 43,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "approveByEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to approve." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "approveByEmail.js" } ],
        "docs":
          { "summary": "Approves a member whose status is `\"PENDING\"` using an email address.",
            "description":
              [ "<!--ONLY:REST",
                "Approves a member whose status is `PENDING` using an email address or approval token.",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO:function:approveByEmail-->",
                "The `approveByEmail()` function returns a Promise that resolves to a session token",
                "when the specified member is approved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work,",
                "> but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByEmail()`](wix-users-backend/approveByEmail).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:VELO:function:approveByToken",
                "The `approveByToken()` function returns a Promise that resolves to a session token",
                "when the specified member is approved. Tokens must be approved within 30 hours of token creation.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByToken()`](wix-users-backend/approveByToken).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Approve a pending member using an email address",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function approveByEmail() {",
                      "  const email = \"sterlingarcher@duchess.com\"",
                      "",
                      "  return authentication.approveByEmail(email)",
                      "    .then((sessionToken) => {",
                      "      return {sessionToken, \"approved\": true};",
                      "    })",
                      "    .catch((error) => {",
                      "      return {\"approved\": false, \"reason\": error};",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which approves a pending member using\n an email address and returns a session token to be used in client-side\n code to log in the member who was just approved." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "approveByToken",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "token",
              "type": "string",
              "doc": "<!--ONLY:VELO-->\nApproval token returned by `register()`.\n<!--END:ONLY:VELO-->" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "approveByToken.js" } ],
        "docs":
          { "summary": "Approves a member whose status is `\"PENDING\"` using an approval token.",
            "description":
              [ "<!--ONLY:REST",
                "Approves a member whose status is `PENDING` using an email address or approval token.",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO:function:approveByEmail",
                "The `approveByEmail()` function returns a Promise that resolves to a session token",
                "when the specified member is approved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work,",
                "> but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByEmail()`](wix-users-backend/approveByEmail).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:VELO:function:approveByToken-->",
                "The `approveByToken()` function returns a Promise that resolves to a session token",
                "when the specified member is approved. Tokens must be approved within 30 hours of token creation.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByToken()`](wix-users-backend/approveByToken).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Approve a pending member using an approval token",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function approveByToken() {",
                      "  const token = 'h4t6DEueMAjvOpvGqThf4ERDC7iZrqQk';",
                      "",
                      "  return authentication.approveByToken(token)",
                      "    .then((sessionToken) => {",
                      "      return {sessionToken, \"approved\": true};",
                      "    })",
                      "    .catch((error) => {",
                      "      return {\"approved\": false, \"reason\": error};",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which approves a pending member using\n an approval token and returns a session token to be used in client-side\n code to log in the member who was just approved." } },
                { "title": "Register a member using a 3rd party for approval",
                  "body":
                    [ "/*******************************",
                      " * Backend code - register.jsw *",
                      " *******************************/",
                      "import { authentication } from \"wix-members-backend\";",
                      "import { approveBy3rdParty } from \"some-backend-module\";",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // Call a third-party API to check if the member is approved",
                      "  return approveBy3rdParty(email, password)",
                      "    .then((isApproved) => {",
                      "      // If approved by the third party",
                      "      if (isApproved) {",
                      "        // Register the member",
                      "        return authentication.register(email, password, {",
                      "          \"contactInfo\": {",
                      "            \"firstName\": firstName,",
                      "            \"lastName\": lastName",
                      "          }",
                      "          // Member is now registered and pending approval",
                      "        })",
                      "          // Approve the member",
                      "          .then((result) => {",
                      "            authentication.approveByToken(result.approvalToken)",
                      "            // Member is now active, but not logged in",
                      "          })",
                      "          // Return the session token to log in the member client-side",
                      "          .then((sessionToken) => {",
                      "            return { sessionToken, \"approved\": true };",
                      "          });",
                      "      } else {",
                      "        // If not approved by the third party",
                      "        return { \"approved\": false };",
                      "      }",
                      "    })",
                      "}",
                      "",
                      "/********************",
                      " * Client-side code *",
                      " ********************/",
                      "import { authentication } from \"wix-members\";",
                      "import { doRegistration } from \"backend/register\";",
                      "",
                      "// ...",
                      "",
                      "const email = \"homersimpson@springfieldnuclear.com\";",
                      "const password = \"bowlingball123\";",
                      "const firstName = \"Homer\";",
                      "const lastName = \"Simpson\";",
                      "",
                      "    doRegistration(email, password, firstName, lastName)",
                      "      .then((result) => {",
                      "        if (result.approved)",
                      "          // Log the member in",
                      "          authentication.applySessionToken(result.sessionToken);",
                      "        else {",
                      "          console.log(\"Not approved!\");",
                      "        }",
                      "      });",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common 3rd party approval flow. The backend code\n calls a 3rd party function that determines whether the member will be approved\n or not. If approved, the `register()` function is called, the registration\n is approved programmatically using the `approveByToken()` function, and a\n session token is returned to the calling client-side code. If rejected, the\n `blockByEmail()` function is called." } },
                { "title": "Register a member sending an email for confirmation",
                  "body":
                    [ "/*******************************",
                      " * Backend code - register.jsw *",
                      " *******************************/",
                      "import { authentication } from \"wix-members-backend\";",
                      "import { triggeredEmails } from \"wix-crm-backend\";",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // Register the visitor",
                      "  return authentication.register(email, password, {",
                      "    \"contactInfo\": {",
                      "      \"firstName\": firstName,",
                      "      \"lastName\": lastName",
                      "    }",
                      "    // The visitor is now a registered member and pending approval",
                      "  })",
                      "    .then((results) => {",
                      "      // Send a registration verification email",
                      "      triggeredEmails.emailMember(\"verifyRegistration\", results.member._id, {",
                      "        \"variables\": {",
                      "          \"name\": firstName,",
                      "          \"verifyLink\": `http://yourdomain.com/post-register?token=${results.approvalToken}`",
                      "        }",
                      "      });",
                      "    });",
                      "}",
                      "",
                      "export function doApproval(token) {",
                      "  // Approve the member",
                      "  return authentication.approveByToken(token)",
                      "    // Member is now active, but not logged in",
                      "    .then((sessionToken) => {",
                      "      // Return the session token to log in the member client-side",
                      "      return { sessionToken, \"approved\": true };",
                      "    })",
                      "    .catch((error) => {",
                      "      return { \"approved\": false, \"reason\": error };",
                      "    });",
                      "}",
                      "",
                      "/*********************************",
                      " * Client-side registration code *",
                      " *********************************/",
                      "import { doRegistration } from \"backend/register\";",
                      "",
                      "export function button_click(event) {",
                      "  const email = \"homersimpson@springfieldnuclear.com\";",
                      "  const password = \"bowlingball123\";",
                      "  const firstName = \"Homer\";",
                      "  const lastName = \"Simpson\";",
                      "",
                      "      doRegistration(email, password, firstName, lastName)",
                      "        .then(() => {",
                      "          console.log(\"Confirmation email sent.\");",
                      "        });",
                      "}",
                      "",
                      "/**************************************",
                      " * Client-side post-registration code *",
                      " **************************************/",
                      "import wixLocation from \"wix-location\";",
                      "import { authentication } from \"wix-members\";",
                      "import { doApproval } from \"backend/register\";",
                      "",
                      "$w.onReady(() => {",
                      "  // Get the token from the URL",
                      "  let token = wixLocation.query.token;",
                      "",
                      "  doApproval(token)",
                      "    .then((result) => {",
                      "      if (result.approved) {",
                      "        // Log the member in",
                      "        authentication.applySessionToken(result.sessionToken);",
                      "        console.log(\"Approved\");",
                      "      }",
                      "      else {",
                      "        console.log(\"Not approved!\");",
                      "      }",
                      "    });",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common email verification flow. A member is initially\n registered but not yet approved. At registration, a verification email is\n sent with a link to a verification page. When a member goes to the verification\n page, the approval is granted and the member is logged into the site.\n\n The code is split between three locations:\n\n + A backend web module named **register.jsw**.\n + The page code for the page where members register.\n + The page code for the page where members confirm their registration." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "blockByEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to block." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "blockByEmail.js" } ],
        "docs":
          { "summary": "Blocks a member from logging in to the site.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `blockByEmail()` function returns a Promise that resolves",
                "when the specified member is blocked.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `blockByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.blockByEmail()`](wix-users-backend/blockByEmail).",
                "",
                "To unblock the member and allow them to log in to the site, use",
                "[`approveByEmail()`](wix-members-backend/authentication-obj/approvebyemail).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Block a member using an email address",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function blockByEmail() {",
                      "  const email = \"seymourbutts@moesbar.com\"",
                      "",
                      "  return authentication.blockByEmail(email)",
                      "    .then(() => {",
                      "      console.log('Member has been blocked');",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "generateSessionToken",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to approve." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "generateSessionToken.js" } ],
        "docs":
          { "summary": "Creates a session token for a member authenticated by a third party.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `generateSessionToken()` function returns a Promise that resolves to a session token",
                "used to log a member in to your site.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `generateSessionToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.generateSessionToken()`](wix-users-backend/generateSessionToken).",
                "",
                "Use `generateSessionToken()` to bypass Wix member authentication",
                "when using a third-party service to authenticate your members.",
                "Meaning, you can provide Single Sign-On (SSO) for members",
                "where they are authenticated by a non-Wix entity to log in to your Wix site.",
                "",
                "If the specified email address corresponds to an existing member,",
                "a session token for logging in that member is generated.",
                "",
                "If there is no existing member with the specified email address,",
                "a new member is created and a session token for logging in that member is generated.",
                "The member is created with a random password.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Log a member in after third-party authentication",
                  "body":
                    [ "/*******************************",
                      " * Backend code - login.jsw *",
                      " *******************************/",
                      "import { authentication } from \"wix-members-backend\";",
                      "import { authBy3rdParty } from \"backend/authentications\";",
                      "",
                      "export function getLoginToken(email, password) {",
                      "  // Authenticate using third party",
                      "  return authBy3rdParty(email, password)",
                      "    .then((isAuthenticated) => {",
                      "      // If authenticated, return session token",
                      "      if (isAuthenticated) {",
                      "        return authentication.generateSessionToken(email)",
                      "          .then((sessionToken) => {",
                      "            return { \"sessionToken\": sessionToken, \"approved\": true };",
                      "          });",
                      "      }",
                      "      // If not authenticated, return non-approval",
                      "      return { \"approved\": false };",
                      "    });",
                      "}",
                      "",
                      "/*********************************",
                      " * Client-side login code *",
                      " *********************************/",
                      "import { getLoginToken } from \"backend/login\";",
                      "import { authentication } from \"wix-members\";",
                      "",
                      "export async function button_onClick(event) {",
                      "  // call backend function",
                      "  getLoginToken($w(\"#email\").value, $w(\"#password\").value)",
                      "    .then((loginResult) => {",
                      "      // If approved, log the member in with the session token",
                      "      if (loginResult.approved) {",
                      "        authentication.applySessionToken(loginResult.sessionToken);",
                      "      }",
                      "      // If not approved, log a message",
                      "      else {",
                      "        console.log(\"Login failed\");",
                      "      }",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which uses a third-party authentication\n service to authenticate a member. If the authentication is successful, a session\n session token is returned and used client-side to log in the authenticated member." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "login",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Email address to use when logging the member in." },
            { "name": "password",
              "type": "string",
              "doc": "Password to use when logging the member in." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "login.js" } ],
        "docs":
          { "summary": "Logs a member in with an email and password.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `login()` function returns a Promise that resolves to a session token",
                "used to log a member in to your site.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `login()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.login()`](wix-users-backend/login).",
                "",
                "To complete the login,",
                "the returned `sessionToken` must be applied using the",
                "[`applySessionToken()`](wix-members/authentication-obj/applysessiontoken)",
                "function in client-side code.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Log in a member",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function login() {",
                      "  const email = \"christopher.robin@100-acre-wood.com\";",
                      "  const password = \"sillyoldbear\";",
                      "",
                      "  return authentication.login(email, password)",
                      "    .then((sessionToken) => {",
                      "      return {sessionToken, \"approved\": true};",
                      "    })",
                      "    .catch((error) => {",
                      "      return {\"approved\": false, \"reason\": error};",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which returns a session token, to be\n used in client-side code to log in the member." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "register",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "The email address to use when registering the visitor as a site member." },
            { "name": "password",
              "type": "string",
              "doc": "The password the newly added site member will use to log in." },
            { "name": "options",
              "type": "wix-members-backend.Authentication.RegistrationOptions",
              "doc": "Registration options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-members-backend.Authentication.RegistrationResult" ] },
            "doc": "Fulfilled - When the member has been registered.\nRejected - Error message." },
        "locations":
          [ { "lineno": 31,
              "filename": "register.js" } ],
        "docs":
          { "summary": "Registers a new site member.",
            "description":
              [ "The `register()` function returns a Promise that resolves to a `RegistrationResult`",
                " object when the member is either registered or is pending registration.",
                "",
                "> **Note:**",
                "> This function replaces the legacy",
                "> `register()` from `wix-users-backend`.",
                "> The legacy function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.register()`](wix-users-backend/register).",
                "",
                " The specified `password` must be between 4 and 15 ASCII printable characters.",
                "",
                " If Site Members is [configured for automatic approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                " the `register()` function returns a status of `\"Active\"` and the visitor will",
                " be an active member of the site.",
                "",
                " If Site Members is [configured for manual approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                " the `register()` function returns a status of `\"Pending\"` and the visitor will",
                " be a pending member of the site. In order to activate a pending member, the",
                " site owner can [approve membership manually](https://support.wix.com/en/article/approving-a-site-member)",
                " using the Contacts application or you can call the [approveByToken()](wix-members-backend/authentication-obj/approveByToken)",
                " or [approveByEmail()](wix-members-backend/authentication-obj/approveByEmail) functions.",
                "",
                " The `sessionToken` returned when the new member is \"Active\" must be applied",
                " using the [`applySessionToken()`](wix-members/authentication-obj/applySessionToken)",
                " function in client-side code to complete the registration by logging",
                " in the registered member.",
                "",
                " > **Note:** When member registration is set to auto approve, calling the [client-side `register()` function](wix-members/authentication-obj/register) is equally as secure as",
                " > calling it from backend code. However, when member approval is set to",
                " > manual, calling the backend version of the `register()` function allows you to construct more secure approval flows." ],
            "links": [],
            "examples":
              [ { "title": "Register a member using a 3rd party for approval",
                  "body":
                    [ "/*******************************",
                      " * Backend code - register.jsw *",
                      " *******************************/",
                      "import { authentication } from \"wix-members-backend\";",
                      "import { approveBy3rdParty } from \"some-backend-module\";",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // Call a third-party API to check if the member is approved",
                      "  return approveBy3rdParty(email, password)",
                      "    .then((isApproved) => {",
                      "      // If approved by the third party",
                      "      if (isApproved) {",
                      "        // Register the member",
                      "        return authentication.register(email, password, {",
                      "          \"contactInfo\": {",
                      "            \"firstName\": firstName,",
                      "            \"lastName\": lastName",
                      "          }",
                      "          // Member is now registered and pending approval",
                      "        })",
                      "          // Approve the member",
                      "          .then((result) => {",
                      "            authentication.approveByToken(result.approvalToken)",
                      "            // Member is now active, but not logged in",
                      "          })",
                      "          // Return the session token to log in the member client-side",
                      "          .then((sessionToken) => {",
                      "            return { sessionToken, \"approved\": true };",
                      "          });",
                      "      } else {",
                      "        // If not approved by the third party",
                      "        return { \"approved\": false };",
                      "      }",
                      "    })",
                      "}",
                      "",
                      "/********************",
                      " * Client-side code *",
                      " ********************/",
                      "import { authentication } from \"wix-members\";",
                      "import { doRegistration } from \"backend/register\";",
                      "",
                      "// ...",
                      "",
                      "const email = \"homersimpson@springfieldnuclear.com\";",
                      "const password = \"bowlingball123\";",
                      "const firstName = \"Homer\";",
                      "const lastName = \"Simpson\";",
                      "",
                      "    doRegistration(email, password, firstName, lastName)",
                      "      .then((result) => {",
                      "        if (result.approved)",
                      "          // Log the member in",
                      "          authentication.applySessionToken(result.sessionToken);",
                      "        else {",
                      "          console.log(\"Not approved!\");",
                      "        }",
                      "      });",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common 3rd party approval flow. The backend code\n calls a 3rd party function that determines whether the member will be approved\n or not. If approved, the `register()` function is called, the registration\n is approved programmatically, and a session token is returned to the calling\n client-side code. If rejected, the `blockByEmail()` function is called." } },
                { "title": "Register a member sending an email for confirmation",
                  "body":
                    [ "/*******************************",
                      " * Backend code - register.jsw *",
                      " *******************************/",
                      "import { authentication } from \"wix-members-backend\";",
                      "import { triggeredEmails } from \"wix-crm-backend\";",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // Register the visitor",
                      "  return authentication.register(email, password, {",
                      "    \"contactInfo\": {",
                      "      \"firstName\": firstName,",
                      "      \"lastName\": lastName",
                      "    }",
                      "    // The visitor is now a registered member and pending approval",
                      "  })",
                      "    .then((results) => {",
                      "      // Send a registration verification email",
                      "      triggeredEmails.emailMember(\"verifyRegistration\", results.member._id, {",
                      "        \"variables\": {",
                      "          \"name\": firstName,",
                      "          \"verifyLink\": `http://yourdomain.com/post-register?token=${results.approvalToken}`",
                      "        }",
                      "      });",
                      "    });",
                      "}",
                      "",
                      "export function doApproval(token) {",
                      "  // Approve the member",
                      "  return authentication.approveByToken(token)",
                      "    // Member is now active, but not logged in",
                      "    .then((sessionToken) => {",
                      "      // Return the session token to log in the member client-side",
                      "      return { sessionToken, \"approved\": true };",
                      "    })",
                      "    .catch((error) => {",
                      "      return { \"approved\": false, \"reason\": error };",
                      "    });",
                      "}",
                      "",
                      "/*********************************",
                      " * Client-side registration code *",
                      " *********************************/",
                      "import { doRegistration } from \"backend/register\";",
                      "",
                      "export function button_click(event) {",
                      "  const email = \"homersimpson@springfieldnuclear.com\";",
                      "  const password = \"bowlingball123\";",
                      "  const firstName = \"Homer\";",
                      "  const lastName = \"Simpson\";",
                      "",
                      "      doRegistration(email, password, firstName, lastName)",
                      "        .then(() => {",
                      "          console.log(\"Confirmation email sent.\");",
                      "        });",
                      "}",
                      "",
                      "/**************************************",
                      " * Client-side post-registration code *",
                      " **************************************/",
                      "import wixLocation from \"wix-location\";",
                      "import { authentication } from \"wix-members\";",
                      "import { doApproval } from \"backend/register\";",
                      "",
                      "$w.onReady(() => {",
                      "  // Get the token from the URL",
                      "  let token = wixLocation.query.token;",
                      "",
                      "  doApproval(token)",
                      "    .then((result) => {",
                      "      if (result.approved) {",
                      "        // Log the member in",
                      "        authentication.applySessionToken(result.sessionToken);",
                      "        console.log(\"Approved\");",
                      "      }",
                      "      else {",
                      "        console.log(\"Not approved!\");",
                      "      }",
                      "    });",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common email verification flow. A member is initially\n registered but not yet approved. At registration, a verification email is\n sent with a link to a verification page. When a member goes to the verification\n page, the approval is granted and the member is logged into the site.\n\n The code is split between three locations:\n\n + A backend web module named **register.jsw**.\n + The page code for the page where members register.\n + The page code for the page where members confirm their registration." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "sendSetPasswordEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email of the member whose password will be set." },
            { "name": "requestedByMember",
              "type": "boolean",
              "doc": "Whether the email is being sent by member request.\n\nIf `true`, the email tells the member\nthey can safely ignore\nif they did not request the password change.\n\nDefaults to `false`." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "boolean" ] },
            "doc": "Fulfilled - Indicates if the request was successfully received." },
        "locations":
          [ { "lineno": 1,
              "filename": "sendSetPasswordEmail.js" } ],
        "docs":
          { "summary": "Sends a site member an email with a link to set their password.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `sendSetPasswordEmail()` function returns a Promise that resolves",
                "when the set password link is emailed to the member.",
                "<!--END:ONLY:VELO-->",
                "",
                "The set password link is valid for 3 hours,",
                "and it can be used only once.",
                "If the link expires, the original password remains." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "RegistrationOptions",
        "locations":
          [ { "lineno": 1,
              "filename": "register.js" } ],
        "docs":
          { "summary": "An object that contains information about a site registration.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactInfo",
              "type": "wix-crm.ContactInfo",
              "doc": "Contact information.",
              "optional": true },
            { "name": "privacyStatus",
              "type": "string",
              "doc": "Sets the [privacy status](https://support.wix.com/en/article/member-privacy-settings-for-groups) of a new member upon registration.\nOne of:\n\n + `\"PUBLIC\"`: Sets the new member status to public. A member whose status is public is a member of the site's community.\n + `\"PRIVATE\"`: Sets the new member status to private. A member whose status is private is not a member of the site's community. The default is set to private.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationResult",
        "locations":
          [ { "lineno": 14,
              "filename": "register.js" } ],
        "docs":
          { "summary": "An object that contains information about the results of a site registration.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "status",
              "type": "string",
              "doc": "Registration status. Either \"Pending\" or \"Active\"." },
            { "name": "sessionToken",
              "type": "string",
              "doc": "A token used to log in the current\n visitor as a site member. Pass the token from your backend code to client-side\n code and use it when calling the [applySessionToken()](wix-members/authentication-obj/applySessionToken)\n function. The token is only available when `status` is \"Active\".",
              "optional": true },
            { "name": "approvalToken",
              "type": "string",
              "doc": "A token for approving the visitor as\n a site member using the [approveByToken()](wix-members-backend/authentication-obj/approveByToken)\n function. The token is safe to pass via email or from client-side code to\n backend code. The token is only available when `status` is \"Pending\". The token\n expires 30 hours after it is created.",
              "optional": true },
            { "name": "user",
              "type": "wix-users.User",
              "doc": "The user that has been registered. // TODO" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }