{ "name": "sessions",
  "memberOf": "wix-bookings-rc-v2-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 17,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "addParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "addParticipantRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.AddParticipantRequest_19276617738",
              "doc": "Participants" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.AddParticipantResult_251409248271" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 16,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipant_addParticipant.js" } ],
        "docs":
          { "summary": "Adds a participant to a schedule.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function addParticipant() {",
                      "  const addParticipantRequest = {",
                      "    scheduleId: \"a string\",",
                      "    participant: {",
                      "      _id: \"a string\",",
                      "      contactId: \"a string\",",
                      "      name: \"a string\",",
                      "      phone: \"a string\",",
                      "      email: \"a string\",",
                      "      partySize: 42,",
                      "      approvalStatus: \"UNDEFINED\"",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .addParticipant(addParticipantRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "addParticipantToSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "addParticipantToSessionRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.AddParticipantToSessionRequest_18455855278",
              "doc": "Participants" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.AddParticipantToSessionResult_255785387939" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 16,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipantToSession_addParticipantToSession.js" } ],
        "docs":
          { "summary": "Adds a participant to a session.",
            "description":
              [ "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function addParticipantToSession() {",
                      "  const addParticipantToSessionRequest = {",
                      "    sessionId: \"a string\",",
                      "    participant: {",
                      "      _id: \"a string\",",
                      "      contactId: \"a string\",",
                      "      name: \"a string\",",
                      "      phone: \"a string\",",
                      "      email: \"a string\",",
                      "      partySize: 42,",
                      "      approvalStatus: \"UNDEFINED\"",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .addParticipantToSession(addParticipantToSessionRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "cancel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cancelScheduleRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.CancelScheduleRequest_9598834207" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.CancelScheduleResult_252251674885" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 16,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Cancel_cancel.js" } ],
        "docs":
          { "summary": "Cancels a schedule. Equivalent to batch cancel of sessions linked to a single schedule.",
            "description":
              [ "The schedule changes to status = CANCELED -  all sessions up until the time of cancellation are kept, and all future sessions are removed.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function cancel() {",
                      "  const cancelScheduleRequest = {",
                      "    scheduleId: \"a string\",",
                      "    from: new Date(),",
                      "    preserveFutureSessionsWithParticipants: true,",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"a string\"",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .cancel(cancelScheduleRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "create",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "createScheduleRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.CreateScheduleRequest_208107594401",
              "doc": "schedule" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.CreateScheduleResult_250539731587" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 57,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Create_create.js" } ],
        "docs":
          { "summary": "Creates a schedule",
            "description":
              [ "<!--ONLY:VELO",
                "The `createSchedule()` function returns a Promise that resolves when a schedule is created",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function create() {",
                      "  const createScheduleRequest = {",
                      "    schedule: {",
                      "      _id: \"a string\",",
                      "      scheduleOwnerId: \"a string\",",
                      "      timeZone: \"a string\",",
                      "      title: \"a string\",",
                      "      tags: [\"a string\"],",
                      "      location: {",
                      "        locationType: \"UNDEFINED\",",
                      "        customAddress: {",
                      "          country: \"a string\",",
                      "          subdivision: \"a string\",",
                      "          city: \"a string\",",
                      "          postalCode: \"a string\",",
                      "          street: {",
                      "            streetAddress: {",
                      "              number: \"a string\",",
                      "              name: \"a string\",",
                      "              apt: \"a string\"",
                      "            }",
                      "          },",
                      "          addressLine2: \"a string\",",
                      "          formattedAddress: \"a string\",",
                      "          hint: \"a string\",",
                      "          geocode: {",
                      "            latitude: 1.23,",
                      "            longitude: 1.23",
                      "          },",
                      "          countryFullname: \"a string\",",
                      "          subdivisions: [",
                      "            {",
                      "              code: \"a string\",",
                      "              name: \"a string\"",
                      "            }",
                      "          ]",
                      "        },",
                      "        businessLocation: {",
                      "          name: \"a string\",",
                      "          description: \"a string\",",
                      "          status: \"ACTIVE\",",
                      "          locationType: \"UNKNOWN\",",
                      "          fax: \"a string\",",
                      "          timeZone: \"a string\",",
                      "          email: \"a string\",",
                      "          phone: \"a string\",",
                      "          address: {",
                      "            country: \"a string\",",
                      "            subdivision: \"a string\",",
                      "            city: \"a string\",",
                      "            postalCode: \"a string\",",
                      "            streetAddress: {",
                      "              number: \"a string\",",
                      "              name: \"a string\",",
                      "              apt: \"a string\"",
                      "            },",
                      "            formattedAddress: \"a string\",",
                      "            hint: \"a string\",",
                      "            geocode: {",
                      "              latitude: 1.23,",
                      "              longitude: 1.23",
                      "            }",
                      "          },",
                      "          businessSchedule: {",
                      "            periods: [",
                      "              {",
                      "                openDay: \"MONDAY\",",
                      "                openTime: \"a string\",",
                      "                closeDay: \"MONDAY\",",
                      "                closeTime: \"a string\"",
                      "              }",
                      "            ],",
                      "            specialHourPeriod: [",
                      "              {",
                      "                startDate: \"a string\",",
                      "                endDate: \"a string\",",
                      "                isClosed: true,",
                      "                comment: \"a string\"",
                      "              }",
                      "            ]",
                      "          },",
                      "          revision: \"a string\"",
                      "        }",
                      "      },",
                      "      capacity: 42,",
                      "      rate: {",
                      "        labeledPriceOptions: {",
                      "          someKey: {",
                      "            amount: \"a string\",",
                      "            currency: \"a string\",",
                      "            downPayAmount: \"a string\"",
                      "          }",
                      "        },",
                      "        priceText: \"a string\"",
                      "      },",
                      "      availability: {",
                      "        start: new Date(),",
                      "        end: new Date(),",
                      "        linkedSchedules: [",
                      "          {",
                      "            scheduleId: \"a string\",",
                      "            transparency: \"UNDEFINED\"",
                      "          }",
                      "        ],",
                      "        constraints: {",
                      "          slotDurations: [42],",
                      "          timeBetweenSlots: 42",
                      "        },",
                      "        locations: [",
                      "          {",
                      "            locationType: \"UNDEFINED\",",
                      "            customAddress: {",
                      "              country: \"a string\",",
                      "              subdivision: \"a string\",",
                      "              city: \"a string\",",
                      "              postalCode: \"a string\",",
                      "              street: {",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                }",
                      "              },",
                      "              addressLine2: \"a string\",",
                      "              formattedAddress: \"a string\",",
                      "              hint: \"a string\",",
                      "              geocode: {",
                      "                latitude: 1.23,",
                      "                longitude: 1.23",
                      "              },",
                      "              countryFullname: \"a string\",",
                      "              subdivisions: [",
                      "                {",
                      "                  code: \"a string\",",
                      "                  name: \"a string\"",
                      "                }",
                      "              ]",
                      "            },",
                      "            businessLocation: {",
                      "              name: \"a string\",",
                      "              description: \"a string\",",
                      "              status: \"ACTIVE\",",
                      "              locationType: \"UNKNOWN\",",
                      "              fax: \"a string\",",
                      "              timeZone: \"a string\",",
                      "              email: \"a string\",",
                      "              phone: \"a string\",",
                      "              address: {",
                      "                country: \"a string\",",
                      "                subdivision: \"a string\",",
                      "                city: \"a string\",",
                      "                postalCode: \"a string\",",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                },",
                      "                formattedAddress: \"a string\",",
                      "                hint: \"a string\",",
                      "                geocode: {",
                      "                  latitude: 1.23,",
                      "                  longitude: 1.23",
                      "                }",
                      "              },",
                      "              businessSchedule: {",
                      "                periods: [",
                      "                  {",
                      "                    openDay: \"MONDAY\",",
                      "                    openTime: \"a string\",",
                      "                    closeDay: \"MONDAY\",",
                      "                    closeTime: \"a string\"",
                      "                  }",
                      "                ],",
                      "                specialHourPeriod: [",
                      "                  {",
                      "                    startDate: \"a string\",",
                      "                    endDate: \"a string\",",
                      "                    isClosed: true,",
                      "                    comment: \"a string\"",
                      "                  }",
                      "                ]",
                      "              },",
                      "              revision: \"a string\"",
                      "            }",
                      "          }",
                      "        ],",
                      "        useDefaultLocation: true",
                      "      },",
                      "      externalCalendarOverrides: {",
                      "        title: \"a string\",",
                      "        description: \"a string\"",
                      "      },",
                      "      calendarConference: {",
                      "        _id: \"a string\",",
                      "        externalId: \"a string\",",
                      "        providerId: \"a string\",",
                      "        hostUrl: \"a string\",",
                      "        guestUrl: \"a string\",",
                      "        password: \"a string\",",
                      "        description: \"a string\",",
                      "        conferenceType: \"UNDEFINED\",",
                      "        accountOwnerId: \"a string\"",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .create(createScheduleRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "createSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionInfo",
              "type": "wix-bookings-rc-v2-backend.sessions.Session_13094101284",
              "doc": "Session." },
            { "name": "options",
              "type": "wix-bookings-rc-v2-backend.Options_936495653",
              "doc": "Authorization options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.CreateSessionResult_26071944823" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 126,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function createSession() {",
                      "  const sessionInfo = {",
                      "    scheduleId: \"a string\",",
                      "    start: {",
                      "      timestamp: new Date(),",
                      "      localDateTime: {",
                      "        year: 42,",
                      "        monthOfYear: 42,",
                      "        dayOfMonth: 42,",
                      "        hourOfDay: 42,",
                      "        minutesOfHour: 42",
                      "      }",
                      "    },",
                      "    end: {",
                      "      timestamp: new Date(),",
                      "      localDateTime: {",
                      "        year: 42,",
                      "        monthOfYear: 42,",
                      "        dayOfMonth: 42,",
                      "        hourOfDay: 42,",
                      "        minutesOfHour: 42",
                      "      }",
                      "    },",
                      "    tags: [\"a string\"],",
                      "    notes: \"a string\",",
                      "    type: \"UNDEFINED\",",
                      "    recurrence: \"a string\"",
                      "  };",
                      "  const options = {",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .createSession(sessionInfo, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "deleteSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "options",
              "type": "wix-bookings-rc-v2-backend.sessions.DeleteSessionRequest_5290069407" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Session ID." },
        "locations":
          [ { "lineno": 8,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_DeleteSession_deleteSession.js" } ],
        "docs":
          { "summary": "Deletes a session from a schedule.",
            "description":
              [ "<!--ONLY:VELO",
                "The `deleteSession()` function returns a Promise that resolves to a session Id when the session has been deleted.",
                "<!--END:ONLY:VELO-->",
                "Use the `participantNotification` property to send an email to the participants when the session is deleted.",
                "",
                "When deleting a session of type `\"EVENT\"` where a booking exists, the booking's status is updated to `\"CANCELED\"`.",
                "",
                "To delete a set of recurring sessions, specify the session's `recurringSessionId` in the `sessionId` property of the request parameters.",
                "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function deleteSession() {",
                      "  const sessionId = \"a string\";",
                      "  const options = {",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"a string\"",
                      "    },",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .deleteSession(sessionId, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "get",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "getScheduleRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.GetScheduleRequest_308712754" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.GetScheduleResult_252079800197" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 13,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Get_get.js" } ],
        "docs":
          { "summary": "Gets a schedule from the calendar.",
            "description":
              [ "<!--ONLY:VELO",
                "The `getSchedule()` function returns a Promise that resolves to a schedule.",
                "Use `getSchedule()` to get a specific schedule based on the schedule Id.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permissions scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function get() {",
                      "  const getScheduleRequest = {",
                      "    _id: \"a string\"",
                      "  };",
                      "",
                      "  return sessions",
                      "    .get(getScheduleRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." },
            { "name": "options",
              "type": "wix-bookings-rc-v2-backend.Options_936495653",
              "doc": "Authorization options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.GetSessionResult_23350677813" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 71,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_GetSession_getSession.js" } ],
        "docs":
          { "summary": "Returns a session from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the session participants are not returned." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function getSession() {",
                      "  const sessionId = \"a string\";",
                      "  const options = {",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .getSession(sessionId, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "list",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "listSchedulesRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.ListSchedulesRequest_7169811266" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.ListSchedulesResult_253828204701" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_List_list.js" } ],
        "docs":
          { "summary": "Lists schedules by schedule IDs or schedule owner IDs.",
            "description":
              [ "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function list() {",
                      "  const listSchedulesRequest = {",
                      "    scheduleIds: [\"a string\"],",
                      "    scheduleOwnerIds: [\"a string\"],",
                      "    dontIncludeScheduleParticipants: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .list(listSchedulesRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "listSessions",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "listSessionsRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.ListSessionsRequest_9558471744",
              "doc": "session" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.ListSessionsResult_256235259860" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_ListSessions_listSessions.js" } ],
        "docs":
          { "summary": "Returns multiple sessions from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope",
                "> With the Read Bookings Calendar permission scope, the sessions return without participants." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function listSessions() {",
                      "  const listSessionsRequest = {",
                      "    ids: [\"a string\"],",
                      "    fieldMask: {",
                      "      paths: [\"a string\"]",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .listSessions(listSessionsRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "listSlots",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "listSlotsRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.ListSlotsRequest_23531210904" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.ListSlotsResult_259828165395" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 14,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "summary": "Returns the schedule slots, calculated by the schedule's availability specification.",
            "description":
              [ "Query object support:",
                "- **filter**: supports",
                "- `scheduleIds`: scheduleIds represent the schedule of the sessions. Required.",
                "The Min list size is 1 and Max is 100. All other filters are optional.",
                "- `scheduleOwnerIds`: the response will contain slots only with the given scheduleOwnerIds.",
                "- `from`: query range start time. Default is now.",
                "- `to`: query range end time. Default is (now + 7 days).",
                "- `isAvailable`: By default returned slots will include full capacity sessions. Filter.isAvailable = false is not supported.",
                "- `location.businessLocation.id`: Filter by `slot.location.business_location.id`. Supports multiple values. Optional.",
                "- **fields**: supported.",
                "- **paging**: Paging is supported using the page token. For paging the results, i.e. with a page size of 10, set the `query.paging.limit` to a value of `10`.",
                "The response will contain a value in the `nextPageToken` field. Pass this value in the `pageToken` field in the following calls and leave the `query` field empty.",
                "- **fieldsets**: not supported.",
                "",
                "",
                "**Query filter example:**",
                "```",
                "{\"scheduleIds\": [\"66a2674c-9267-4600-826e-f463957b9446\", \"66a2674c-9267-4600-826e-f463957b9447\"] , \"from\": \"2019-02-17T13:08:43.000Z\" , \"to\": \"2019-02-17T14:08:43.000Z\",\"isAvailable\": true}).",
                "```",
                "```",
                "{\"scheduleIds\": [\"66a2674c-9267-4600-826e-f463957b9446\", \"66a2674c-9267-4600-826e-f463957b9447\"], \"scheduleOwnerIds\": [\"95a2624a-8797-84229-a678-57b9448482b\"] , \"from\": \"2019-02-17T13:08:43.000Z\" , \"to\": \"2019-02-17T14:08:43.000Z\"}).",
                "```",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar Availability, the Read Bookings Calendar, the Read Bookings - Public Data, the Read Bookings - Including Participants or the Manage Bookings permission scope." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function listSlots() {",
                      "  const listSlotsRequest = {",
                      "    listQuery: {",
                      "      filter: {",
                      "        someKey: \"some-value\"",
                      "      },",
                      "      sort: [",
                      "        {",
                      "          fieldName: \"a string\",",
                      "          order: \"ASC\"",
                      "        }",
                      "      ],",
                      "      fields: [\"a string\"],",
                      "      fieldsets: [\"a string\"],",
                      "      pagingMethod: {",
                      "        paging: {",
                      "          limit: 42,",
                      "          offset: 42",
                      "        }",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .listSlots(listSlotsRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "querySessions",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-rc-v2-backend.sessions.BookingsRcV2QueryBuilder_68149959505",
            "doc": "Contains functionality for refining a bookingsRcV2 query.\nThe `BookingsRcV2QueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the bookingsRcV2 query functions,\nrefine the query by chaining `BookingsRcV2QueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code queries...:\n\n```javascript\nimport wixBookingsRcV2Backend from 'wix-bookingsRcV2-backend';\n\nwixBookingsRcV2Backend.queryBookingsRcV2()\n  .eq(\"<property1>\", \"<value1>\")\n  .ascending(\"<property2>\")\n  .limit(5)\n  .find()\n  .then( (results) => {\n    console.log(results.items);\n  } );\n```" },
        "locations":
          [ { "lineno": 1249,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSessions_querySessions.js" } ],
        "docs":
          { "summary": "Returns sessions from the business calendar.",
            "description":
              [ "Query object support:",
                "- **filter**: supports",
                "- `from`: query range start time. Required when `recurringSessions` is false. Ignored when `recurringSessions` is true.",
                "- `to`: query range end time. Required when `recurringSessions` is false. Ignored when `recurringSessions` is true.",
                "- `scheduleIds`: filter by list of schedule ids. Up to 100 values are allowed. Required when `recurringSessions` is true.",
                "- `scheduleId`: deprecated, use `scheduleIds` instead.",
                "- `end.timestamp `|` .ge` query range from. `.ge(\"start.timestamp\",\"2020-04-27T10:00:00.000Z\")`|",
                "- `start.timestamp `| `.le` query range to. `.le(\"start.timestamp\",\"2020-04-27T10:00:00.000Z\")`|",
                "- `tags`: filter by list of tags. Ignored when `recurringSessions` is true.",
                "- `type`: filter by session type. Ignored when `recurringSessions` is true.",
                "- `hasCalendarConference`: filter sessions that have calendar conference created. Ignored when `recurringSessions` is true.",
                "- `intervalIds`: filter by list of interval ids. Ignored when `recurringSessions` is true.",
                "- `recurringSessionIds`: filter by a list of recurring session ids. Ignored when `recurringSessions` is true.",
                "- `scheduleOwnerIds`: the response will contain sessions with the given scheduleOwnerIds and sessions with affectedSchedules with the given scheduleOwnerIds. Ignored when `recurringSessions` is true.",
                "- `transparency`: when applied, the `scheduleOwnerIds` filter is required. In case the transparency = BUSY, the response will contain sessions with the given scheduleOwnerIds and sessions with affectedSchedules with the given scheduleOwnerIds where the owner's transparency is BUSY.",
                "When transparency = FREE, the response will contain only sessions and affectedSchedules with the given scheduleOwnerIds when the owner's transparency is FREE.",
                "- `contactIds`: The response contains sessions with participants with the given contactIds. Ignored when `recurringSessions` is true.",
                "- `recurringSessions`: Deprecated, use Recurrence instead. When set to 'true', only recurring sessions are returned. The default is `false`.",
                "- `recurrence`: Filter by `session.recurrence`, supports only `{\"$ne\": null}`",
                "- `location.locationType`: Filter by `session.location.location_type`. Supports multiple values. Possible values are `OWNER_BUSINESS`, `OWNER_CUSTOM` and `CUSTOM`. Optional. Currently not supported for recurring sessions.",
                "- `location.businessLocation.id`: Filter by `session.location.business_location.id`. Supports multiple values. Optional. Currently not supported for recurring sessions.",
                "- **fields**: supported.",
                "- **paging**: Paging is supported using the page token. For paging the results, i.e. with a page size of 10, set the `query.paging.limit` to a value of `10`.",
                "The response will contain a value in the `nextPageToken` field. Pass this value in the `pageToken` field in the following calls and leave the `query` field empty.",
                "- **fieldsets**: not supported.",
                "",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar, the Read Bookings Calendar - Including Participants, the Read Bookings - Including Participants or the Manage Bookings permission." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function querySessions() {",
                      "  const options = {",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .querySessions()",
                      "    .eq(\"key\", \"value\")",
                      "    .find(options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "removeParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "removeParticipantRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.RemoveParticipantRequest_156275188" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.RemoveParticipantResult_1039961440" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 13,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_RemoveParticipant_removeParticipant.js" } ],
        "docs":
          { "summary": "Removes a participant from a schedule or from a specific session.",
            "description":
              [ "Note: Currently, removing *participants that have been inherited from a schedule* from a specific session, is not supported.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function removeParticipant() {",
                      "  const removeParticipantRequest = {",
                      "    _id: \"a string\"",
                      "  };",
                      "",
                      "  return sessions",
                      "    .removeParticipant(removeParticipantRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "sessionBatch",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionBatchRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.SessionBatchRequest_249410053570" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.SessionBatchResult_258683975392" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 59,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "summary": "Create, Update, and Delete multiple sessions in a single request.",
            "description":
              [ "All sessions must belong to the same schedule.",
                "Currently only supported for recurring sessions.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function sessionBatch() {",
                      "  const sessionBatchRequest = {",
                      "    sessionsToCreate: [",
                      "      {",
                      "        session: {",
                      "          scheduleId: \"a string\",",
                      "          originalStart: new Date(),",
                      "          start: {",
                      "            timestamp: new Date(),",
                      "            localDateTime: {",
                      "              year: 42,",
                      "              monthOfYear: 42,",
                      "              dayOfMonth: 42,",
                      "              hourOfDay: 42,",
                      "              minutesOfHour: 42",
                      "            }",
                      "          },",
                      "          end: {",
                      "            timestamp: new Date(),",
                      "            localDateTime: {",
                      "              year: 42,",
                      "              monthOfYear: 42,",
                      "              dayOfMonth: 42,",
                      "              hourOfDay: 42,",
                      "              minutesOfHour: 42",
                      "            }",
                      "          },",
                      "          affectedSchedules: [",
                      "            {",
                      "              scheduleId: \"a string\",",
                      "              transparency: \"UNDEFINED\"",
                      "            }",
                      "          ],",
                      "          title: \"a string\",",
                      "          tags: [\"a string\"],",
                      "          location: {",
                      "            locationType: \"UNDEFINED\",",
                      "            customAddress: {",
                      "              country: \"a string\",",
                      "              subdivision: \"a string\",",
                      "              city: \"a string\",",
                      "              postalCode: \"a string\",",
                      "              street: {",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                }",
                      "              },",
                      "              addressLine2: \"a string\",",
                      "              formattedAddress: \"a string\",",
                      "              hint: \"a string\",",
                      "              geocode: {",
                      "                latitude: 1.23,",
                      "                longitude: 1.23",
                      "              },",
                      "              countryFullname: \"a string\",",
                      "              subdivisions: [",
                      "                {",
                      "                  code: \"a string\",",
                      "                  name: \"a string\"",
                      "                }",
                      "              ]",
                      "            },",
                      "            businessLocation: {",
                      "              name: \"a string\",",
                      "              description: \"a string\",",
                      "              status: \"ACTIVE\",",
                      "              locationType: \"UNKNOWN\",",
                      "              fax: \"a string\",",
                      "              timeZone: \"a string\",",
                      "              email: \"a string\",",
                      "              phone: \"a string\",",
                      "              address: {",
                      "                country: \"a string\",",
                      "                subdivision: \"a string\",",
                      "                city: \"a string\",",
                      "                postalCode: \"a string\",",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                },",
                      "                formattedAddress: \"a string\",",
                      "                hint: \"a string\",",
                      "                geocode: {",
                      "                  latitude: 1.23,",
                      "                  longitude: 1.23",
                      "                }",
                      "              },",
                      "              businessSchedule: {",
                      "                periods: [",
                      "                  {",
                      "                    openDay: \"MONDAY\",",
                      "                    openTime: \"a string\",",
                      "                    closeDay: \"MONDAY\",",
                      "                    closeTime: \"a string\"",
                      "                  }",
                      "                ],",
                      "                specialHourPeriod: [",
                      "                  {",
                      "                    startDate: \"a string\",",
                      "                    endDate: \"a string\",",
                      "                    isClosed: true,",
                      "                    comment: \"a string\"",
                      "                  }",
                      "                ]",
                      "              },",
                      "              revision: \"a string\"",
                      "            }",
                      "          },",
                      "          capacity: 42,",
                      "          rate: {",
                      "            labeledPriceOptions: {",
                      "              someKey: {",
                      "                amount: \"a string\",",
                      "                currency: \"a string\",",
                      "                downPayAmount: \"a string\"",
                      "              }",
                      "            },",
                      "            priceText: \"a string\"",
                      "          },",
                      "          timeReservedAfter: 42,",
                      "          notes: \"a string\",",
                      "          participants: [",
                      "            {",
                      "              _id: \"a string\",",
                      "              contactId: \"a string\",",
                      "              name: \"a string\",",
                      "              phone: \"a string\",",
                      "              email: \"a string\",",
                      "              partySize: 42,",
                      "              approvalStatus: \"UNDEFINED\"",
                      "            }",
                      "          ],",
                      "          externalCalendarOverrides: {",
                      "            title: \"a string\",",
                      "            description: \"a string\"",
                      "          },",
                      "          type: \"UNDEFINED\",",
                      "          calendarConference: {",
                      "            _id: \"a string\",",
                      "            externalId: \"a string\",",
                      "            providerId: \"a string\",",
                      "            hostUrl: \"a string\",",
                      "            guestUrl: \"a string\",",
                      "            password: \"a string\",",
                      "            description: \"a string\",",
                      "            conferenceType: \"UNDEFINED\",",
                      "            accountOwnerId: \"a string\"",
                      "          },",
                      "          recurrence: \"a string\"",
                      "        },",
                      "        deleted: {",
                      "          paths: [\"a string\"]",
                      "        }",
                      "      }",
                      "    ],",
                      "    sessionsToUpdate: [",
                      "      {",
                      "        session: {",
                      "          scheduleId: \"a string\",",
                      "          originalStart: new Date(),",
                      "          start: {",
                      "            timestamp: new Date(),",
                      "            localDateTime: {",
                      "              year: 42,",
                      "              monthOfYear: 42,",
                      "              dayOfMonth: 42,",
                      "              hourOfDay: 42,",
                      "              minutesOfHour: 42",
                      "            }",
                      "          },",
                      "          end: {",
                      "            timestamp: new Date(),",
                      "            localDateTime: {",
                      "              year: 42,",
                      "              monthOfYear: 42,",
                      "              dayOfMonth: 42,",
                      "              hourOfDay: 42,",
                      "              minutesOfHour: 42",
                      "            }",
                      "          },",
                      "          affectedSchedules: [",
                      "            {",
                      "              scheduleId: \"a string\",",
                      "              transparency: \"UNDEFINED\"",
                      "            }",
                      "          ],",
                      "          title: \"a string\",",
                      "          tags: [\"a string\"],",
                      "          location: {",
                      "            locationType: \"UNDEFINED\",",
                      "            customAddress: {",
                      "              country: \"a string\",",
                      "              subdivision: \"a string\",",
                      "              city: \"a string\",",
                      "              postalCode: \"a string\",",
                      "              street: {",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                }",
                      "              },",
                      "              addressLine2: \"a string\",",
                      "              formattedAddress: \"a string\",",
                      "              hint: \"a string\",",
                      "              geocode: {",
                      "                latitude: 1.23,",
                      "                longitude: 1.23",
                      "              },",
                      "              countryFullname: \"a string\",",
                      "              subdivisions: [",
                      "                {",
                      "                  code: \"a string\",",
                      "                  name: \"a string\"",
                      "                }",
                      "              ]",
                      "            },",
                      "            businessLocation: {",
                      "              name: \"a string\",",
                      "              description: \"a string\",",
                      "              status: \"ACTIVE\",",
                      "              locationType: \"UNKNOWN\",",
                      "              fax: \"a string\",",
                      "              timeZone: \"a string\",",
                      "              email: \"a string\",",
                      "              phone: \"a string\",",
                      "              address: {",
                      "                country: \"a string\",",
                      "                subdivision: \"a string\",",
                      "                city: \"a string\",",
                      "                postalCode: \"a string\",",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                },",
                      "                formattedAddress: \"a string\",",
                      "                hint: \"a string\",",
                      "                geocode: {",
                      "                  latitude: 1.23,",
                      "                  longitude: 1.23",
                      "                }",
                      "              },",
                      "              businessSchedule: {",
                      "                periods: [",
                      "                  {",
                      "                    openDay: \"MONDAY\",",
                      "                    openTime: \"a string\",",
                      "                    closeDay: \"MONDAY\",",
                      "                    closeTime: \"a string\"",
                      "                  }",
                      "                ],",
                      "                specialHourPeriod: [",
                      "                  {",
                      "                    startDate: \"a string\",",
                      "                    endDate: \"a string\",",
                      "                    isClosed: true,",
                      "                    comment: \"a string\"",
                      "                  }",
                      "                ]",
                      "              },",
                      "              revision: \"a string\"",
                      "            }",
                      "          },",
                      "          capacity: 42,",
                      "          rate: {",
                      "            labeledPriceOptions: {",
                      "              someKey: {",
                      "                amount: \"a string\",",
                      "                currency: \"a string\",",
                      "                downPayAmount: \"a string\"",
                      "              }",
                      "            },",
                      "            priceText: \"a string\"",
                      "          },",
                      "          timeReservedAfter: 42,",
                      "          notes: \"a string\",",
                      "          participants: [",
                      "            {",
                      "              _id: \"a string\",",
                      "              contactId: \"a string\",",
                      "              name: \"a string\",",
                      "              phone: \"a string\",",
                      "              email: \"a string\",",
                      "              partySize: 42,",
                      "              approvalStatus: \"UNDEFINED\"",
                      "            }",
                      "          ],",
                      "          externalCalendarOverrides: {",
                      "            title: \"a string\",",
                      "            description: \"a string\"",
                      "          },",
                      "          type: \"UNDEFINED\",",
                      "          calendarConference: {",
                      "            _id: \"a string\",",
                      "            externalId: \"a string\",",
                      "            providerId: \"a string\",",
                      "            hostUrl: \"a string\",",
                      "            guestUrl: \"a string\",",
                      "            password: \"a string\",",
                      "            description: \"a string\",",
                      "            conferenceType: \"UNDEFINED\",",
                      "            accountOwnerId: \"a string\"",
                      "          },",
                      "          recurrence: \"a string\"",
                      "        },",
                      "        updated: {",
                      "          paths: [\"a string\"]",
                      "        },",
                      "        deleted: {",
                      "          paths: [\"a string\"]",
                      "        },",
                      "        participantNotification: {",
                      "          notifyParticipants: true,",
                      "          message: \"a string\"",
                      "        }",
                      "      }",
                      "    ],",
                      "    sessionsToDelete: [",
                      "      {",
                      "        _id: \"a string\",",
                      "        participantNotification: {",
                      "          notifyParticipants: true,",
                      "          message: \"a string\"",
                      "        }",
                      "      }",
                      "    ]",
                      "  };",
                      "",
                      "  return sessions",
                      "    .sessionBatch(sessionBatchRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "splitRecurringSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "splitRecurringSessionRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.SplitRecurringSessionRequest_3004348263" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.SplitRecurringSessionResult_255312881687" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 14,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SplitRecurringSession_splitRecurringSession.js" } ],
        "docs":
          { "summary": "Splits a recurring session into two or more parts.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function splitRecurringSession() {",
                      "  const splitRecurringSessionRequest = {",
                      "    recurringSessionId: \"a string\",",
                      "    splitTimes: [new Date()]",
                      "  };",
                      "",
                      "  return sessions",
                      "    .splitRecurringSession(splitRecurringSessionRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "update",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "updateScheduleRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.UpdateScheduleRequest_217519934368" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.UpdateScheduleResult_252878884022" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 59,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Update_update.js" } ],
        "docs":
          { "summary": "Updates a schedule.",
            "description":
              [ "This method supports patch semantics. The field values you specify replace the existing values.",
                "Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays, and therefore discards any previous array elements.",
                "The `availability.locations` array cannot be updated. Please use the `setAvailabilityLocations` endpoint instead.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function update() {",
                      "  const updateScheduleRequest = {",
                      "    schedule: {",
                      "      _id: \"a string\",",
                      "      scheduleOwnerId: \"a string\",",
                      "      timeZone: \"a string\",",
                      "      title: \"a string\",",
                      "      tags: [\"a string\"],",
                      "      location: {",
                      "        locationType: \"UNDEFINED\",",
                      "        customAddress: {",
                      "          country: \"a string\",",
                      "          subdivision: \"a string\",",
                      "          city: \"a string\",",
                      "          postalCode: \"a string\",",
                      "          street: {",
                      "            streetAddress: {",
                      "              number: \"a string\",",
                      "              name: \"a string\",",
                      "              apt: \"a string\"",
                      "            }",
                      "          },",
                      "          addressLine2: \"a string\",",
                      "          formattedAddress: \"a string\",",
                      "          hint: \"a string\",",
                      "          geocode: {",
                      "            latitude: 1.23,",
                      "            longitude: 1.23",
                      "          },",
                      "          countryFullname: \"a string\",",
                      "          subdivisions: [",
                      "            {",
                      "              code: \"a string\",",
                      "              name: \"a string\"",
                      "            }",
                      "          ]",
                      "        },",
                      "        businessLocation: {",
                      "          name: \"a string\",",
                      "          description: \"a string\",",
                      "          status: \"ACTIVE\",",
                      "          locationType: \"UNKNOWN\",",
                      "          fax: \"a string\",",
                      "          timeZone: \"a string\",",
                      "          email: \"a string\",",
                      "          phone: \"a string\",",
                      "          address: {",
                      "            country: \"a string\",",
                      "            subdivision: \"a string\",",
                      "            city: \"a string\",",
                      "            postalCode: \"a string\",",
                      "            streetAddress: {",
                      "              number: \"a string\",",
                      "              name: \"a string\",",
                      "              apt: \"a string\"",
                      "            },",
                      "            formattedAddress: \"a string\",",
                      "            hint: \"a string\",",
                      "            geocode: {",
                      "              latitude: 1.23,",
                      "              longitude: 1.23",
                      "            }",
                      "          },",
                      "          businessSchedule: {",
                      "            periods: [",
                      "              {",
                      "                openDay: \"MONDAY\",",
                      "                openTime: \"a string\",",
                      "                closeDay: \"MONDAY\",",
                      "                closeTime: \"a string\"",
                      "              }",
                      "            ],",
                      "            specialHourPeriod: [",
                      "              {",
                      "                startDate: \"a string\",",
                      "                endDate: \"a string\",",
                      "                isClosed: true,",
                      "                comment: \"a string\"",
                      "              }",
                      "            ]",
                      "          },",
                      "          revision: \"a string\"",
                      "        }",
                      "      },",
                      "      capacity: 42,",
                      "      rate: {",
                      "        labeledPriceOptions: {",
                      "          someKey: {",
                      "            amount: \"a string\",",
                      "            currency: \"a string\",",
                      "            downPayAmount: \"a string\"",
                      "          }",
                      "        },",
                      "        priceText: \"a string\"",
                      "      },",
                      "      availability: {",
                      "        start: new Date(),",
                      "        end: new Date(),",
                      "        linkedSchedules: [",
                      "          {",
                      "            scheduleId: \"a string\",",
                      "            transparency: \"UNDEFINED\"",
                      "          }",
                      "        ],",
                      "        constraints: {",
                      "          slotDurations: [42],",
                      "          timeBetweenSlots: 42",
                      "        },",
                      "        locations: [",
                      "          {",
                      "            locationType: \"UNDEFINED\",",
                      "            customAddress: {",
                      "              country: \"a string\",",
                      "              subdivision: \"a string\",",
                      "              city: \"a string\",",
                      "              postalCode: \"a string\",",
                      "              street: {",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                }",
                      "              },",
                      "              addressLine2: \"a string\",",
                      "              formattedAddress: \"a string\",",
                      "              hint: \"a string\",",
                      "              geocode: {",
                      "                latitude: 1.23,",
                      "                longitude: 1.23",
                      "              },",
                      "              countryFullname: \"a string\",",
                      "              subdivisions: [",
                      "                {",
                      "                  code: \"a string\",",
                      "                  name: \"a string\"",
                      "                }",
                      "              ]",
                      "            },",
                      "            businessLocation: {",
                      "              name: \"a string\",",
                      "              description: \"a string\",",
                      "              status: \"ACTIVE\",",
                      "              locationType: \"UNKNOWN\",",
                      "              fax: \"a string\",",
                      "              timeZone: \"a string\",",
                      "              email: \"a string\",",
                      "              phone: \"a string\",",
                      "              address: {",
                      "                country: \"a string\",",
                      "                subdivision: \"a string\",",
                      "                city: \"a string\",",
                      "                postalCode: \"a string\",",
                      "                streetAddress: {",
                      "                  number: \"a string\",",
                      "                  name: \"a string\",",
                      "                  apt: \"a string\"",
                      "                },",
                      "                formattedAddress: \"a string\",",
                      "                hint: \"a string\",",
                      "                geocode: {",
                      "                  latitude: 1.23,",
                      "                  longitude: 1.23",
                      "                }",
                      "              },",
                      "              businessSchedule: {",
                      "                periods: [",
                      "                  {",
                      "                    openDay: \"MONDAY\",",
                      "                    openTime: \"a string\",",
                      "                    closeDay: \"MONDAY\",",
                      "                    closeTime: \"a string\"",
                      "                  }",
                      "                ],",
                      "                specialHourPeriod: [",
                      "                  {",
                      "                    startDate: \"a string\",",
                      "                    endDate: \"a string\",",
                      "                    isClosed: true,",
                      "                    comment: \"a string\"",
                      "                  }",
                      "                ]",
                      "              },",
                      "              revision: \"a string\"",
                      "            }",
                      "          }",
                      "        ],",
                      "        useDefaultLocation: true",
                      "      },",
                      "      externalCalendarOverrides: {",
                      "        title: \"a string\",",
                      "        description: \"a string\"",
                      "      },",
                      "      calendarConference: {",
                      "        _id: \"a string\",",
                      "        externalId: \"a string\",",
                      "        providerId: \"a string\",",
                      "        hostUrl: \"a string\",",
                      "        guestUrl: \"a string\",",
                      "        password: \"a string\",",
                      "        description: \"a string\",",
                      "        conferenceType: \"UNDEFINED\",",
                      "        accountOwnerId: \"a string\"",
                      "      }",
                      "    },",
                      "    fieldMask: {",
                      "      paths: [\"a string\"]",
                      "    },",
                      "    alignTimeExceptions: true,",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"a string\"",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .update(updateScheduleRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "updateParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "updateParticipantRequest",
              "type": "wix-bookings-rc-v2-backend.sessions.UpdateParticipantRequest_20461774022" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.UpdateParticipantResult_15516915249" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 14,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateParticipant_updateParticipant.js" } ],
        "docs":
          { "summary": "Updates participant details.",
            "description":
              [ "The field values you specify replace the existing values. Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays; this discards any previous array elements.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function updateParticipant() {",
                      "  const updateParticipantRequest = {",
                      "    participant: {",
                      "      _id: \"a string\",",
                      "      contactId: \"a string\",",
                      "      name: \"a string\",",
                      "      phone: \"a string\",",
                      "      email: \"a string\",",
                      "      partySize: 42,",
                      "      approvalStatus: \"UNDEFINED\"",
                      "    },",
                      "    fieldMask: {",
                      "      paths: [\"a string\"]",
                      "    }",
                      "  };",
                      "",
                      "  return sessions",
                      "    .updateParticipant(updateParticipantRequest)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "updateSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." },
            { "name": "sessionInfo",
              "type": "wix-bookings-rc-v2-backend.sessions.Session_9306644143",
              "doc": "Session." },
            { "name": "options",
              "type": "wix-bookings-rc-v2-backend.Options_936495653",
              "doc": "Authorization options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-rc-v2-backend.sessions.UpdateSessionResult_24900475364" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 125,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "Updates a session.",
            "description":
              [ "<!--ONLY:VELO",
                "The `updateSession()` function returns a Promise that resolves when the session has been updated.",
                "<!--END:ONLY:VELO-->",
                "The property values specified replace the existing values. If a property is not specified in the request it will remain unchanged.",
                "Array properties, if specified, overwrite the existing array and all of its elements.",
                "The `participants` array cannot be updated.",
                "Use the participantNotification property to send an email to the participants notifying them of the change.",
                "<!--ONLY:REST-->",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { sessions } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function updateSession() {",
                      "  const sessionId = \"a string\";",
                      "  const sessionInfo = {",
                      "    start: {",
                      "      timestamp: new Date(),",
                      "      localDateTime: {",
                      "        year: 42,",
                      "        monthOfYear: 42,",
                      "        dayOfMonth: 42,",
                      "        hourOfDay: 42,",
                      "        minutesOfHour: 42",
                      "      }",
                      "    },",
                      "    end: {",
                      "      timestamp: new Date(),",
                      "      localDateTime: {",
                      "        year: 42,",
                      "        monthOfYear: 42,",
                      "        dayOfMonth: 42,",
                      "        hourOfDay: 42,",
                      "        minutesOfHour: 42",
                      "      }",
                      "    },",
                      "    tags: [\"a string\"],",
                      "    notes: \"a string\",",
                      "    type: \"UNDEFINED\",",
                      "    recurrence: \"a string\"",
                      "  };",
                      "  const options = {",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return sessions",
                      "    .updateSession(sessionId, sessionInfo, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AddParticipantRequest_19276617738",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipant_addParticipant.js" } ],
        "docs":
          { "summary": "Participants",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID. Required." },
            { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_14950462006",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantResult_251409248271",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipant_addParticipant.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_16742085086",
              "doc": "Participant." },
            { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantToSessionRequest_18455855278",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipantToSession_addParticipantToSession.js" } ],
        "docs":
          { "summary": "Participants",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_14950462006",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantToSessionResult_255785387939",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipantToSession_addParticipantToSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_16742085086",
              "doc": "Participant." },
            { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_251512637686",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantToSessionResult_259936134190",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_AddParticipantToSession_addParticipantToSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_16742085086",
              "doc": "Participant." },
            { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_255663383937",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Availability_161223611200",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Update_update.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking.",
              "optional": true },
            { "name": "end",
              "type": "Date",
              "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.LinkedSchedule_7939545343" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.",
              "optional": true },
            { "name": "constraints",
              "type": "wix-bookings-rc-v2-backend.AvailabilityConstraints_1966120690",
              "doc": "Constraints for calculating the schedule's availability.",
              "optional": true },
            { "name": "locations",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Location_147848441914" ] },
              "doc": "Not supported yet.\nA list of possible locations for the session when `use_default_location` is set to `false`. Slots are generated for each location. Only one of the possible locations can be chosen by the customer. \n\n **NOTE**: When using the `locations` parameter, the default location is not automatically included in the list.",
              "optional": true },
            { "name": "useDefaultLocation",
              "type": "boolean",
              "doc": "Not supported yet.\n Whether the schedule's slots are only available at the schedule's default location, as set in `schedule.location`. If set to `false`, the `locations` array is used to set the possible locations of the schedule's sessions.\n Default is `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Availability_161316299921",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Create_create.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking." },
            { "name": "end",
              "type": "Date",
              "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.LinkedSchedule_7939545343" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.",
              "optional": true },
            { "name": "constraints",
              "type": "wix-bookings-rc-v2-backend.AvailabilityConstraints_1966120690",
              "doc": "Constraints for calculating the schedule's availability.",
              "optional": true },
            { "name": "locations",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Location_147848441914" ] },
              "doc": "Not supported yet.\nA list of possible locations for the session when `use_default_location` is set to `false`. Slots are generated for each location. Only one of the possible locations can be chosen by the customer. \n\n **NOTE**: When using the `locations` parameter, the default location is not automatically included in the list.",
              "optional": true },
            { "name": "useDefaultLocation",
              "type": "boolean",
              "doc": "Not supported yet.\n Whether the schedule's slots are only available at the schedule's default location, as set in `schedule.location`. If set to `false`, the `locations` array is used to set the possible locations of the schedule's sessions.\n Default is `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleRequest_9598834207",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Cancel_cancel.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "from",
              "type": "Date",
              "doc": "Time to cancel the sessions from. Optional. If this field is empty, all of this schedule's sessions will be canceled.",
              "optional": true },
            { "name": "preserveFutureSessionsWithParticipants",
              "type": "boolean",
              "doc": "Whether to preserve future sessions with reservations. Defaults to false.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleResult_252251674885",
        "locations":
          [ { "lineno": 10,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Cancel_cancel.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleRequest_208107594401",
        "locations":
          [ { "lineno": 19,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Create_create.js" } ],
        "docs":
          { "summary": "schedule",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.sessions.Schedule_206582583816",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleResult_250539731587",
        "locations":
          [ { "lineno": 26,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Create_create.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionRequest_229426948665",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "summary": "Schedule's session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_221562585945",
              "doc": "Session.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionRequest_233485006195",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "summary": "Schedule's session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "CreateSessionResult_253964450151",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_251512637686",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionResult_258115196402",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_255663383937",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "CreateSessionResult_26071944823",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "ID of the schedule that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the resource or service that session's schedule belongs to." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "CreateSessionResult_26620611375",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "CreateSessionResult_30222691074",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "DeleteSessionRequest_5290069407",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_DeleteSession_deleteSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionRequest_5772496212",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_DeleteSession_deleteSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "DeleteSessionRequest_6604909881",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID. Required.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionResult_2746856964",
        "locations":
          [ { "lineno": 22,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FieldMask_7974751780",
        "locations":
          [ { "lineno": 132,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "clearInheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The set of field mask paths.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "FieldMask_8457178585",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "clearInheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The set of field mask paths.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "GetScheduleRequest_308712754",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Get_get.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetScheduleResult_252079800197",
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Get_get.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetSessionResult_23350677813",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_GetSession_getSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "ID of the schedule that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the resource or service that session's schedule belongs to." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "ListSchedulesRequest_7169811266",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_List_list.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule IDs.",
              "optional": true },
            { "name": "scheduleOwnerIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule owner IDs.",
              "optional": true },
            { "name": "dontIncludeScheduleParticipants",
              "type": "boolean",
              "doc": "Whether to return a list of the schedule's participants.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSchedulesResult_253828204701",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_List_list.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Schedule_252114210686" ] },
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsRequest_9558471744",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_ListSessions_listSessions.js" } ],
        "docs":
          { "summary": "session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ids",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Session ID.",
              "optional": true },
            { "name": "fieldMask",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsResult_256235259860",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_ListSessions_listSessions.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_251512637686" ] },
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsResult_260386006111",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_ListSessions_listSessions.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_255663383937" ] },
              "doc": "Session." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "ListSlotsRequest_23531210904",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "listQuery",
              "type": "wix-bookings-rc-v2-backend.QueryV2_25356650774",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSlotsRequest_27967346597",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "listQuery",
              "type": "wix-bookings-rc-v2-backend.QueryV2_25356650774",
              "optional": true },
            { "name": "limitPerDay",
              "type": "wix-bookings-rc-v2-backend.sessions.ListSlotsRequest_LimitPerDay_4567179699",
              "doc": "The maximal number of items to return per day.\nFor example, when given the value 1, at most one slot will be returned per day within the requested date range.\nWhen empty, no limit per day will be applied (other than the general limit given in list_query field).",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "ListSlotsRequest_LimitPerDay_4567179699",
        "locations":
          [ { "lineno": 10,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "summary": "The maximal number of items to return per day.",
            "description":
              [ "For example, when given the value 1, at most one slot will be returned per day within the requested date range.",
                "When empty, no limit per day will be applied (other than the general limit given in list_query field)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "The maximal number of items to return per day.",
              "optional": true },
            { "name": "timezone",
              "type": "string",
              "doc": "The timezone by which the limit will be applied. Defaults to UTC.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "ListSlotsResult_259828165395",
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "slots",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_251512637686" ] },
              "doc": "Slots on the calendar." },
            { "name": "pagingMetadata",
              "type": "wix-bookings-rc-v2-backend.PagingMetadataV2_5481679798" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSlotsResult_263978911646",
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSlots_listSlots.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "slots",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_255663383937" ] },
              "doc": "Slots on the calendar." },
            { "name": "pagingMetadata",
              "type": "wix-bookings-rc-v2-backend.PagingMetadataV2_5481679798" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "QueryOptions_114952375",
        "locations":
          [ { "lineno": 1242,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSessions_querySessions.js" } ],
        "docs":
          { "summary": "The `options` parameter is an optional parameter that can be used when calling the query [`find()`](#find) function.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantRequest_156275188",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_RemoveParticipant_removeParticipant.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantResult_1039961440",
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_RemoveParticipant_removeParticipant.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Schedule_206489895095",
        "locations":
          [ { "lineno": 19,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Update_update.js" } ],
        "docs":
          { "summary": "Schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the schedule's owner entity. This may be a resource ID or a service ID.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-rc-v2-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the schedule's sessions. Default is 1.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-rc-v2-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-rc-v2-backend.sessions.Availability_161223611200",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-rc-v2-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-rc-v2-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Schedule_206582583816",
        "locations":
          [ { "lineno": 32,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Create_create.js" } ],
        "docs":
          { "summary": "Schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID.",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the schedule's owner entity. This may be a resource ID or a service ID." },
            { "name": "timeZone",
              "type": "string",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-rc-v2-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the schedule's sessions. Default is 1.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-rc-v2-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-rc-v2-backend.sessions.Availability_161316299921",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-rc-v2-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-rc-v2-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchRequest_249410053570",
        "locations":
          [ { "lineno": 28,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsToCreate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.CreateSessionRequest_229426948665" ] },
              "optional": true },
            { "name": "sessionsToUpdate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.UpdateSessionRequest_237418334636" ] },
              "optional": true },
            { "name": "sessionsToDelete",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.DeleteSessionRequest_6604909881" ] },
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchRequest_253468111100",
        "locations":
          [ { "lineno": 28,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsToCreate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.CreateSessionRequest_233485006195" ] },
              "optional": true },
            { "name": "sessionsToUpdate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.UpdateSessionRequest_241476392166" ] },
              "optional": true },
            { "name": "sessionsToDelete",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.DeleteSessionRequest_6604909881" ] },
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "SessionBatchResult_258683975392",
        "locations":
          [ { "lineno": 36,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsCreated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.CreateSessionResult_253964450151" ] } },
            { "name": "sessionsUpdated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.UpdateSessionResult_252792980692" ] } },
            { "name": "sessionsDeleted",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.DeleteSessionResult_2746856964" ] } } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchResult_262834721643",
        "locations":
          [ { "lineno": 36,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsCreated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.CreateSessionResult_258115196402" ] } },
            { "name": "sessionsUpdated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.UpdateSessionResult_256943726943" ] } },
            { "name": "sessionsDeleted",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.sessions.DeleteSessionResult_2746856964" ] } } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_13094101284",
        "locations":
          [ { "lineno": 71,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "Session_13364701673",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time.",
              "optional": true },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_13550079115",
        "locations":
          [ { "lineno": 70,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_17152158814",
        "locations":
          [ { "lineno": 71,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_221840652108",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "originalStart",
              "type": "Date",
              "doc": "Original start date and time of the session in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format.",
              "optional": true },
            { "name": "affectedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.LinkedSchedule_7939545343" ] },
              "doc": "An object specifying a list of linked schedules and the way each schedule's availability is affected by the session. For example, the schedule of an instructor is linked to the schedule of the class that they instruct.\nIf the session is a recurring session, the value is inherited from the schedule but can still be overridden.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Session title. The default value is the schedule title.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-rc-v2-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the session. Defaults to the schedule capacity.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-rc-v2-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "timeReservedAfter",
              "type": "number",
              "doc": "Time reserved after the session end time, derived from the schedule availability constraints and the time between slots. Read-only.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Participant_14857773285" ] },
              "doc": "List of participants booked for the session.\nThe list includes participants who have registered for this specific session, and participants who have registered for a schedule that includes this session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-rc-v2-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-rc-v2-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_225898709638",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "originalStart",
              "type": "Date",
              "doc": "Original start date and time of the session in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format.",
              "optional": true },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "affectedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.LinkedSchedule_7939545343" ] },
              "doc": "An object specifying a list of linked schedules and the way each schedule's availability is affected by the session. For example, the schedule of an instructor is linked to the schedule of the class that they instruct.\nIf the session is a recurring session, the value is inherited from the schedule but can still be overridden.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Session title. The default value is the schedule title.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-rc-v2-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the session. Defaults to the schedule capacity.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-rc-v2-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "timeReservedAfter",
              "type": "number",
              "doc": "Time reserved after the session end time, derived from the schedule availability constraints and the time between slots. Read-only.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Participant_14857773285" ] },
              "doc": "List of participants booked for the session.\nThe list includes participants who have registered for this specific session, and participants who have registered for a schedule that includes this session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-rc-v2-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-rc-v2-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_22955438268",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSessions_querySessions.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "ID of the schedule that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the resource or service that session's schedule belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "Session_23504104820",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSessions_querySessions.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_27106184519",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_calendar_api_v1_CalendarService_ListSessions_querySessions.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_448208966",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "Session_9306644143",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`.",
              "optional": true },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1787767738",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "SplitRecurringSessionRequest_3004348263",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SplitRecurringSession_splitRecurringSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID." },
            { "name": "splitTimes",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Date" ] },
              "doc": "A list of times where the session is to be split. Must not be in the past. Must not contain duplicate times." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitRecurringSessionResult_255312881687",
        "locations":
          [ { "lineno": 8,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SplitRecurringSession_splitRecurringSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recurringSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_251512637686" ] },
              "doc": "A list of recurring sessions where the first is the modified original session followed by other newly created sessions." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitRecurringSessionResult_259463627938",
        "locations":
          [ { "lineno": 8,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SplitRecurringSession_splitRecurringSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recurringSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-rc-v2-backend.Session_255663383937" ] },
              "doc": "A list of recurring sessions where the first is the modified original session followed by other newly created sessions." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "UpdateParticipantRequest_20461774022",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateParticipant_updateParticipant.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_14950462006",
              "doc": "Participant." },
            { "name": "fieldMask",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateParticipantResult_15516915249",
        "locations":
          [ { "lineno": 8,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateParticipant_updateParticipant.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-rc-v2-backend.Participant_16742085086",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateScheduleRequest_217519934368",
        "locations":
          [ { "lineno": 44,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Update_update.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.sessions.Schedule_206489895095",
              "doc": "Schedule.",
              "optional": true },
            { "name": "fieldMask",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "alignTimeExceptions",
              "type": "boolean",
              "doc": "Optional. Defaults to false. In case of updated intervals' start time, this field indicates whether to align those interval's time exceptions.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateScheduleResult_252878884022",
        "locations":
          [ { "lineno": 53,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Update_update.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-rc-v2-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest_237418334636",
        "locations":
          [ { "lineno": 44,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_221562585945",
              "doc": "Session.",
              "optional": true },
            { "name": "updated",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest_241476392166",
        "locations":
          [ { "lineno": 44,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "updated",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-rc-v2-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-rc-v2-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "UpdateSessionResult_24900475364",
        "locations":
          [ { "lineno": 55,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "ID of the schedule that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the resource or service that session's schedule belongs to." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course or blocked time. Events are visible in the Dashboard in the Bookings app's Booking Calendar page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_1138946691",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a `localDateTime`." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "UpdateSessionResult_252792980692",
        "locations":
          [ { "lineno": 53,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_251512637686",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionResult_25449141916",
        "locations":
          [ { "lineno": 62,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "UpdateSessionResult_256943726943",
        "locations":
          [ { "lineno": 53,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_sessionBatch.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-rc-v2-backend.Session_255663383937",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "UpdateSessionResult_29051221615",
        "locations":
          [ { "lineno": 55,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-rc-v2-backend.CalendarDateTime_3011799560",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] } ],
  "extra":
    {  } }