{ "name": "WixSomeQueryBuilder_6078281615",
  "memberOf": "wix-some-edm",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 23,
      "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" },
  "docs":
    { "summary": "Contains functionality for refining a some query.",
      "description":
        [ "The `WixSomeQueryBuilder` functions enable you to run, sort, filter, and control",
          "which results a query returns.",
          "",
          "Typically, you build a query using any of the some query functions,",
          "refine the query by chaining `WixSomeQueryBuilder` functions, and then execute the",
          "query by chaining *one* of the following functions: [`find()`](#find), `distinct()`](#distinct), or [`count()`](#count).",
          "",
          "For example, the following code queries...:",
          "",
          "```javascript",
          "import wixSomeBackend from 'wix-some-backend';",
          "",
          "wixSomeBackend.querySome()",
          ".eq(\"<property1>\", \"<value1>\")",
          ".ascending(\"<property2>\")",
          ".limit(5)",
          ".find()",
          ".then( (results) => {",
          "console.log(results.items);",
          "} );",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "eq",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`." },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-some-edm.WixSomeQueryBuilder_6078281615",
            "doc": "Contains functionality for refining a some query.\nThe `WixSomeQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the some query functions,\nrefine the query by chaining `WixSomeQueryBuilder` functions, and then execute the\nquery by chaining *one* of the following functions: [`find()`](#find), `distinct()`](#distinct), or [`count()`](#count).\n\nFor example, the following code queries...:\n\n```javascript\nimport wixSomeBackend from 'wix-some-backend';\n\nwixSomeBackend.querySome()\n    .eq(\"<property1>\", \"<value1>\")\n    .ascending(\"<property2>\")\n    .limit(5)\n    .find()\n    .then( (results) => {\n      console.log(results.items);\n    } );\n```" },
        "locations":
          [ { "lineno": 50,
              "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value equals the specified value.",
            "description":
              [ "The `eq()` function refines a `WixSomeQueryBuilder` to only",
                "match items where the value of the specified property equals the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "Matching strings with `eq()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`.",
                "",
                "If the value of the `propertyName` property is an Array, `eq()` includes items",
                "in which any of the elements of the Array match the specified `value`." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "find",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-some-edm.QueryOptions_2576758187" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-some-edm.WixSomeQueryResult_33507652565" ] },
            "doc": "Fulfilled - The results of a some query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-some-edm.WixSomeQueryBuilder.html#find)\nor [`distinct()`](wix-some-edm.WixSomeQueryBuilder.html#distinct)\nfunctions, it returns a Promise that resolves to a `WixSomeQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 222,
              "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The `find()` function returns a Promise that resolves to the results found",
                "by the query and some information about the results. The Promise is",
                "rejected if `find()` is called with incorrect permissions or if any of the",
                "functions used to refine the query are invalid." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "ge",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`." },
            { "name": "value",
              "type": "string",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-some-edm.WixSomeQueryBuilder_6078281615",
            "doc": "Contains functionality for refining a some query.\nThe `WixSomeQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the some query functions,\nrefine the query by chaining `WixSomeQueryBuilder` functions, and then execute the\nquery by chaining *one* of the following functions: [`find()`](#find), `distinct()`](#distinct), or [`count()`](#count).\n\nFor example, the following code queries...:\n\n```javascript\nimport wixSomeBackend from 'wix-some-backend';\n\nwixSomeBackend.querySome()\n    .eq(\"<property1>\", \"<value1>\")\n    .ascending(\"<property2>\")\n    .limit(5)\n    .find()\n    .then( (results) => {\n      console.log(results.items);\n    } );\n```" },
        "locations":
          [ { "lineno": 175,
              "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value is greater than or equal to the specified value.",
            "description":
              [ "The `ge()` function refines a `WixSomeQueryBuilder` to only",
                "match items where the value of the specified property is greater than or equal to the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "If a property contains a number as a String, that value will be compared",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified property are ranked lowest.",
                "",
                "The following types of properties can be compared:",
                "",
                "+ Number: Compares numerically.",
                "+ Date: Compares JavaScript Date objects.",
                "+ String: Compares lexicographically,",
                "`\"abc\"` is greater than or equal to `\"ABC\"` (because of the greater than),",
                "but `\"ABC\"` is not greater than or equal to `\"abc\"`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "gt",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`." },
            { "name": "value",
              "type": "string",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-some-edm.WixSomeQueryBuilder_6078281615",
            "doc": "Contains functionality for refining a some query.\nThe `WixSomeQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the some query functions,\nrefine the query by chaining `WixSomeQueryBuilder` functions, and then execute the\nquery by chaining *one* of the following functions: [`find()`](#find), `distinct()`](#distinct), or [`count()`](#count).\n\nFor example, the following code queries...:\n\n```javascript\nimport wixSomeBackend from 'wix-some-backend';\n\nwixSomeBackend.querySome()\n    .eq(\"<property1>\", \"<value1>\")\n    .ascending(\"<property2>\")\n    .limit(5)\n    .find()\n    .then( (results) => {\n      console.log(results.items);\n    } );\n```" },
        "locations":
          [ { "lineno": 130,
              "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value is greater than the specified value.",
            "description":
              [ "The `gt()` function refines a `WixSomeQueryBuilder` to only",
                "match items where the value of the specified property is greater than the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "If a property contains a number as a String, that value will be compared",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified property are ranked lowest.",
                "",
                "The following types of properties can be compared:",
                "",
                "+ Number: Compares numerically.",
                "+ Date: Compares JavaScript Date objects.",
                "+ String: Compares lexicographically, so `\"text\"` is greater than `\"Text\"`." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "ne",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`." },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-some-edm.WixSomeQueryBuilder_6078281615",
            "doc": "Contains functionality for refining a some query.\nThe `WixSomeQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the some query functions,\nrefine the query by chaining `WixSomeQueryBuilder` functions, and then execute the\nquery by chaining *one* of the following functions: [`find()`](#find), `distinct()`](#distinct), or [`count()`](#count).\n\nFor example, the following code queries...:\n\n```javascript\nimport wixSomeBackend from 'wix-some-backend';\n\nwixSomeBackend.querySome()\n    .eq(\"<property1>\", \"<value1>\")\n    .ascending(\"<property2>\")\n    .limit(5)\n    .find()\n    .then( (results) => {\n      console.log(results.items);\n    } );\n```" },
        "locations":
          [ { "lineno": 90,
              "filename": "com_wixpress_cloud_edm_autogen_QueryService_Echo_echo.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value does not equal the specified value.",
            "description":
              [ "The `ne()` function refines a `WixSomeQueryBuilder` to only",
                "match items where the value of the specified property does not equal the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "Matching strings with `ne()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`.",
                "",
                "If the value of the `propertyName` property is an Array, `ne()` includes items",
                "in which none of the elements of the Array match the specified `value`." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }